digraph {
  rankdir="LR";
  graph [fontsize=12, fontname=Helvetica, penwidth=3];
  node [fontsize=12, fontname=Helvetica];
  edge [fontsize=12, fontname=Helvetica];
  nodesep=0.5;
  mindist=3.0;
  mclimit=10.0;
  splines="curved";

  subgraph cluster_stores {
    label="Stores";
    bgcolor="#fde725";
    DeckCollectionStore [shape=circle];
    DeckStore [shape=doublecircle];
    activeDeckIdentifier [shape=circle];
    PileCollectionStore [shape=circle];
    PileStore [shape=doublecircle];
  }

  subgraph cluster_responders {
    label="Responders";
    bgcolor="#a5db36";

    onDeckCollectionChange [shape=circle];
    onDeckChange [shape=doublecircle];

    DeckCollectionStore -> onDeckCollectionChange;
    activeDeckIdentifier -> onDeckCollectionChange;
    DeckStore -> onDeckChange;
    PileCollectionStore -> onPileCollectionChange;
    PileStore -> onPileChange;
  }

  subgraph cluster_renderers {
    label="Renderers";
    bgcolor="#54c568";

    RenderDeckCollection [shape=circle];
    RenderDeck [shape=doublecircle];
    RenderPileCollection [shape=circle];
    RenderPile [shape=doublecircle];

    onDeckCollectionChange -> RenderDeckCollection;
    onDeckChange -> RenderDeck;
    RenderDeck -> RenderPileCollection;

    onPileCollectionChange -> RenderPileCollection;
    onPileChange -> RenderPile;
  }

  subgraph cluster_updaters {
    label="Updaters";
    bgcolor="#22a884";

    addDeck [shape=circle];
    addPile [shape=circle];
    addDeck -> DeckCollectionStore;
    addPile -> PileCollectionStore;
    RenderDeckCollection -> addDeck [style=dashed];
    RenderDeck -> activeDeckIdentifier [style=dashed, label="setPart"];
    RenderDeck -> DeckStore [style=dashed, label="setPart"];
    RenderPileCollection -> addPile [style=dashed];
    RenderPile -> PileCollectionStore [style=dashed, label="remove"];
    RenderPile -> PileStore [style=dashed, label="del"];
    RenderPile -> PileStore [style=dashed, label="setPart"];
  }

  //subgraph cluster_legend {
    //label="Legend";
//
    //singleEntity [shape=circle, label="Single entity"];
    //multipleEntities [shape=doublecircle, label="Multiple entities"];
//
    //a -> b [label="Call"];
    //c -> d [style=dashed, label="Conditional call"];
  //}
}
