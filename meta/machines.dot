digraph {
  graph [fontsize=12, fontname=Ubuntu, penwidth=3];
  node [fontsize=12, fontname=Ubuntu, shape=circle];
  edge [fontsize=12, fontname=Ubuntu];
  nodesep=3;
  overlap=false;
  root=onEstablishPilesContainer;
  dim=4;
  mode=ipsep;
  sep=0.4

  // Persisters
  PilesPersister;
  PilesPersister -> DeckStore [label="setPart"];
  PilesPersister -> DeckStore [label="get"];
  deckIdsPersister -> localStorage [label="setItem"];
  thingPersister -> localStorage [label="setItem"];

  subgraph cluster_stores {
    label="Stores";
    bgcolor="#fde725";
    DeckCollectionStore;
    DeckStore [shape=doublecircle];
    activeDeckIdentifier;
    PileCollectionStore;
    PileStore [shape=doublecircle];
  }

  subgraph cluster_responders {
    label="Responders";
    bgcolor="#a5db36";

    onDeckCollectionChange;
    onDeckChange [shape=doublecircle];
    onPileCollectionChange;
    onPileChange [shape=doublecircle];
    onEstablishPilesContainer [shape=doublecircle];

    DeckCollectionStore -> onDeckCollectionChange;
    DeckCollectionStore -> deckIdsPersister [label="write"];
    activeDeckIdentifier -> onDeckCollectionChange;
    DeckStore -> onDeckChange;
    DeckStore -> thingPersister [style=dashed, label="write"];
    PileCollectionStore -> onPileCollectionChange;
    PileStore -> onPileChange;
    PileStore -> thingPersister [style=dashed, label="write"];
    PileCollectionStore -> PilesPersister [style=dashed, label="write"]
  }

  subgraph cluster_renderers {
    label="Renderers";
    bgcolor="#54c568";

    RenderDeckCollection;
    RenderDeck [shape=doublecircle];
    RenderPileCollection;
    RenderPile [shape=doublecircle];

    onDeckCollectionChange -> RenderDeckCollection;
    onDeckChange -> RenderDeck;
    RenderDeck -> onEstablishPilesContainer [style=dashed, label="(one-time)"];
    onEstablishPilesContainer -> RenderPileCollection;
    onEstablishPilesContainer -> RenderPile;

    onPileCollectionChange -> RenderPileCollection;
    onPileChange -> RenderPile;
  }

  subgraph cluster_updaters {
    label="Updaters";
    bgcolor="#22a884";

    addDeck;
    addPile;
    addDeck -> DeckCollectionStore;
    addPile -> PileCollectionStore;
    RenderDeckCollection -> addDeck [style=dashed];
    RenderDeck -> activeDeckIdentifier [style=dashed, label="setPart"];
    RenderDeck -> DeckStore [style=dashed, label="setPart"];
    RenderDeck -> DeckStore [style=dashed, label="del"];
    RenderDeck -> DeckCollectionStore [style=dashed, label="remove"];
    RenderPileCollection -> addPile [style=dashed];
    RenderPile -> PileCollectionStore [style=dashed, label="remove"];
    RenderPile -> PileStore [style=dashed, label="del"];
    RenderPile -> PileStore [style=dashed, label="setPart"];
  }

  //subgraph cluster_legend {
    //label="Legend";
//
    //singleEntity [shape=circle, label="Single entity"];
    //multipleEntities [shape=doublecircle, label="Multiple entities"];
//
    //a -> b [label="Call"];
    //c -> d [style=dashed, label="Conditional call"];
  //}
}
